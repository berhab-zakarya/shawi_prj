name: üöÄ Deploy to Hostinger (Optimized)

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Add SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.HOSTINGER_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 31.97.182.92 >> ~/.ssh/known_hosts

      - name: Deploy to Hostinger
        run: |
          ssh -o StrictHostKeyChecking=no root@31.97.182.92 << 'EOF'
            set -e

            echo "üöÄ Starting optimized deployment..."

            REPO_DIR="/opt/elshawi_platform/shawi_prj"

            if [ ! -d "$REPO_DIR" ]; then
              echo "üìÇ Creating project directory..."
              mkdir -p /opt/elshawi_platform
              cd /opt/elshawi_platform
              git clone https://github.com/berhab-zakarya/shawi_prj.git shawi_prj
            else
              echo "üîÑ Updating repository..."
              cd "$REPO_DIR"
              git fetch origin
              git reset --hard origin/master
            fi

            cd "$REPO_DIR"

            if [ ! -f .env.prod ]; then
              echo "‚ùå .env.prod not found! Deployment aborted."
              exit 1
            fi

            echo "üßπ Cleaning up old containers (keep volumes)..."
            docker-compose -f docker-compose.prod.yml down --timeout 30 || true

            echo "üèóÔ∏è Building images with cache..."
            # Build backend with cache
            docker-compose -f docker-compose.prod.yml build \
              --build-arg BUILDKIT_INLINE_CACHE=1 \
              backend

            # Build frontend with cache (if it exists)
            if [ -d "frontend" ]; then
              docker-compose -f docker-compose.prod.yml build \
                --build-arg BUILDKIT_INLINE_CACHE=1 \
                frontend
            fi

            echo "üöÄ Starting services..."
            docker-compose -f docker-compose.prod.yml up -d

            echo "‚è≥ Waiting for services to be healthy..."
            timeout 120 bash -c 'until docker-compose -f docker-compose.prod.yml ps | grep -q "healthy\|Up"; do sleep 5; done'

            echo "üè• Checking service health..."
            docker-compose -f docker-compose.prod.yml ps

            # Wait a bit more for the application to fully start
            sleep 20

            if curl -f http://localhost/ > /dev/null 2>&1; then
              echo "‚úÖ Application is responding"
            else
              echo "‚ùå Application health check failed"
              docker-compose -f docker-compose.prod.yml logs --tail=50 backend
              docker-compose -f docker-compose.prod.yml logs --tail=50 nginx
              exit 1
            fi


            echo "üéâ Deployment completed successfully!"
          EOF

      - name: Verify Deployment
        run: |
          ssh -o StrictHostKeyChecking=no root@31.97.182.92 << 'EOF'
            cd /opt/elshawi_platform/shawi_prj
            echo "üìä Final service status:"
            docker-compose -f docker-compose.prod.yml ps
            echo "üíæ Disk usage:"
            df -h /opt/elshawi_platform
            echo "üê≥ Docker images:"
            docker images | head -10
          EOF