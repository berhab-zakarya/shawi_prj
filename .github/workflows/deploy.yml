name: Rebuild and Deploy Backend Only

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
      - '.github/workflows/deploy.yml'
      - 'docker-compose.prod.yml'
      - 'Dockerfile*'

env:
  AZURE_API_BASE: https://management.azure.com
  AZURE_REGION: eastus
  BACKEND_NAME: elshawi-backend-stable
  BACKEND_DNS: elshawi-backend-stable.eastus.azurecontainer.io
  BACKEND_PATH: ./backend
  BACKEND_IMAGE_NAME: elshawi-backend-img:latest

jobs:
  deploy-backend:
    name: Deploy Backend Only
    runs-on: ubuntu-latest

    steps:
      - name: ⏬ Checkout Code
        uses: actions/checkout@v3

      - name: 🔐 Verify Azure Access Token
        id: verify-auth
        env:
          AZURE_ACCESS_TOKEN: ${{ secrets.AZURE_ACCESS_TOKEN }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
        run: |
          echo "🔐 Verifying Azure access token..."
          echo "🔍 Subscription ID: $AZURE_SUBSCRIPTION_ID"
          echo "🔍 Resource Group: $AZURE_RESOURCE_GROUP"
          echo "🌍 Azure Region: $AZURE_REGION"

          HTTP_CODE=$(curl -s -w "%{http_code}" -o /tmp/sub_response.json \
            -H "Authorization: Bearer ${AZURE_ACCESS_TOKEN}" \
            -H "Content-Type: application/json" \
            "${AZURE_API_BASE}/subscriptions/${AZURE_SUBSCRIPTION_ID}?api-version=2025-04-01")

          if [ "$HTTP_CODE" = "200" ]; then
            echo "✅ Access token is valid"
            SUB_NAME=$(cat /tmp/sub_response.json | jq -r '.displayName')
            echo "📋 Subscription: $SUB_NAME"
            echo "verified=true" >> $GITHUB_OUTPUT
          else
            echo "❌ Access token validation failed with HTTP code: $HTTP_CODE"
            cat /tmp/sub_response.json
            echo "verified=false" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: 🐳 Build Backend Image
        run: |
          echo "⚙️ Building backend image..."
          docker build -t $BACKEND_IMAGE_NAME -f $BACKEND_PATH/Dockerfile.prod $BACKEND_PATH

      - name: 🐳 Save Image as Tarball
        run: |
          docker save $BACKEND_IMAGE_NAME -o backend.tar

      - name: 🔁 Restart Backend on Azure
        run: |
          echo "📦 Restarting Azure Container Instance: $BACKEND_NAME"
          az login --access-token $AZURE_ACCESS_TOKEN
          az container restart --resource-group $AZURE_RESOURCE_GROUP --name $BACKEND_NAME

      - name: 🧪 Verify Backend is Up
        run: |
          echo "🔍 Checking backend health endpoint..."
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://$BACKEND_DNS/api/health/)
          if [ "$HTTP_STATUS" = "200" ]; then
            echo "✅ Backend is healthy"
          else
            echo "❌ Backend returned status: $HTTP_STATUS"
            exit 1
          fi
